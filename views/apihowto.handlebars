<h1>martinn6's API How-To Project</h1>
<h2>Steam's APIs</h2>

<p>
This page will be an introduction to some of Steam's API's. In this introduction, we 
will discuss how to setup your website to use Steam's API and then show some API examples. 
</p>

<h2>Steam's API Support Website</h2>
The main page for Steam's APIs can be found here: 
<a href="https://developer.valvesoftware.com/wiki/Steam_Web_API" target="_blank">
	https://developer.valvesoftware.com/wiki/Steam_Web_API
</a>

<h2>Contents:</h2>

<ul>
	<li><a href="#SetupAPIKey">Setup - How to get the API setup</a></li>
	<li>API tutorials
		<ul>
			<li><a href="#GetOwnedGames">GetOwnedGames</a></li>
			<li><a href="#GetNewsForApp">GetNewsForApp</a></li>
		</ul>
	</li>
</ul>

<section id="SetupAPIKey">
	<h2>Setup - How to get the API setup</h2>
	<h3>First Step - Creating API key</h3>
	<div>
		To use Steam's API, we need to first get an access key so our JavaScript can access it. Here are the steps needed to
		create a Steam API key:
	</div>
	<div>
		1) Goto: <a href="https://steamcommunity.com/login/home/?goto=%2Fdev%2Fapikey" target="_blank">
			https://steamcommunity.com/login/home/?goto=%2Fdev%2Fapikey
	</a>
	</div>
	<div>
		2) You will see a login screen. Login to your steam account or create a new steam user account
	</div>
	<img src="images\login.png" alt="Login Screen">
	<div>
		3) You will then have to enter in your domain name. I entered in the IP address of my server for an example. You
		will have to agree to their terms and then click on 'Register'.
	</div>
	<img src="images\registerapi.png" alt="Register Server">
	<div>
		4) You will then be presented with your API key. Mine is presented below. Make sure to copy it and save it
		to a place for reference. I like to use OneNote so its always backed up.
	</div>
	<img src="images\webapikey.png" alt="Web API Key">
	<div>
		Congratulations! You now have a web API key for Steam. 
	</div>
</section>

<section id="FindUserID">
	
</section>

<section id="GetOwnedGames">
	<h2>GetOwnedGames API</h2>
	<div>
		This API will get all of the owned games for a paricular user id (streamid). 
	</div>
	<h3>Find your steam ID</h3>
	<div>
		Some API's like GetOwnedGames require a stream ID. Its very easy to find your stream ID. To do this, 
		login to your stream profile here: http://steamcommunity.com/. Once you are loged in, click on your profile 
		pic in the upper right corner and it will take you to your profile. Your stream ID is the long number located 
		in the URL after profiles/. For example, mine is located here: http://steamcommunity.com/profiles/<font color="red">76561198031992079</font>/home. Copy it to a safe location so you can use it later. Now, we have all the 
		data we need to start using the 'GetOwnedGames' API.  
	</div>
	<h3>How to Use</h3>
	<div>
		To use the GetOwnedGames api, all you have to do is submit a get request to the API's URL with the appropriate 
		arguments. The Arguments are as follows:
	</div>
	<h3>Arguments</h3>
		<ul>
			<li><font color="green">API Key:  The API Key you generated. </font></li>
			<li><font color="red">steamid:  The SteamID of the account. </font></li>

			<li><font color="blue">include_appinfo:  Include game name and logo information in the output. 
			The default is to return appids only. </font></li>

			<li>include_played_free_games:  By default, free games like Team Fortress 2 are excluded (as 
				technically everyone owns them). If include_played_free_games is set, they will be returned 
				if the player has played them at some point. This is the same behavior as the games list on 
				the Steam Community. </li>

			<li>format:  Output format. json (default), xml or vdf. </li>

			<li>appids_filter:  You can optionally filter the list to a set of appids. Note that these 
			cannot be passed as a URL parameter, instead you must use the JSON format described in 
			Steam_Web_API#Calling_Service_interfaces. The expected input is an array of integers 
			(in JSON: "appids_filter: [ 440, 500, 550 ]" ) </li>
		</ul>
	
	<h3>Exampe URL</h3>
		An example get request that I would use for my login would be: 
		http://api.steampowered.com/IPlayerService/GetOwnedGames/v0001/?<font color="green">key=8B6421C0C4A593FB05AD15FA71752C28</font>&<font color="red">steamid=76561198031992079</font>&format=json&<font color="blue">include_appinfo=1</font>
	<h3>Return</h3>
		If you typed the above URL into a web browser, it would return a jason object simliar to this:
		<div>
		<pre>
	{
		"response": {
			"game_count": 14,
			"games": [
				{
					"appid": 220,
					"name": "Half-Life 2",
					"playtime_forever": 1158,
					"img_icon_url": "fcfb366051782b8ebf2aa297f3b746395858cb62",
					"img_logo_url": "e4ad9cf1b7dc8475c1118625daf9abd4bdcbcad0",
					"has_community_visible_stats": true
				},
			...
			]
		
		}
	}
		</pre>
		</div>
		<h3>Example</h3>
		To see this in an example website form, click <a href="http://52.10.4.121:3000/getownedgames?yourAPIKey=8B6421C0C4A593FB05AD15FA71752C28&valveUserID=76561198031992079&showGameInfo=on" target="_blank">here</a>.
</section>
<section id="GetNewsForApp">
	<h2>GetNewsForApp API</h2>
	<div>
		This API will get the latest news for a given AppId. The AppId is a little tricky to find; however, the 
		previous API discussed 'GetOwnedGames' should give you some names of games and their AppId.
	</div>
	<h3>How to Use</h3>
	<div>
		To use the GetNewsForApp api, all you have to do is submit a get request to the API's URL with the appropriate 
		arguments. The Arguments are as follows:
	</div>
	<h3>Arguments</h3>
	<ul>
		<li>appid: AppID of the game you want the news of. </li>
		<li>count:  How many news enties you want to get returned. </li>
		<li>maxlength:  Maximum length of each news entry. </li>
		<li>format:  Output format. json (default), xml or vdf. </li>
	</ul>
	<h3>Exampe URL</h3>
	An example get request that I would use for my login would be: 
	http://api.steampowered.com/ISteamNews/GetNewsForApp/v0002/?appid=8930&count=4&maxlength=300&format=json
	<h3>Return</h3>
	<div>
		<pre>
		If you typed the above URL into a web browser, it would return a jason object simliar to this:
		{ 	appid: 8930,
			newsitems:
			[ 
				{ 	gid: '378660375691318759',
					title: 'The Beginner s Guide: A Journey Through Genres',
					url: 'http://store.steampowered.com/news/externalpost/rps/378660375691318759',
					is_external_url: true,
					author: 'contact@rockpapershotgun.com (Adam Smith)',
					contents: '<p><img src="http://www.rockpapershotgun.com/images/15/oct/witchsupp.jpg" alt="" />
					</p>\n<p><em>One day I&#8217;ll write a Desert Island Discs about the games I&#8217;d keep 
					with me until the end of days, given a choice of ten. It&#8217;ll no doubt be a Desert 
					Island Digital Downloads given the absence of physical media in my life. I live with the 
					ghosts of entertainment.</p>\n<p>Rather than compiling the list of games I&#8217;d take to 
					the Vault with me though, today I&#8217;m aiming to put together a collection, one from each 
					genre, that I&#8217;d use to introduce those genres to a PC gaming newcomer, or a lapsed gamer. 
					A friend inspired this particular bundle of joy, someone who grew up with an Amiga but developed 
					other interests and hasn&#8217;t touched a game for more than a few minutes at a time, either 
					console or PC, for over fifteen years. A recent illness has left him unable to engage in his 
					usual outdoor hobbies and games have filled the gap.</em></p>\n<p> &#8230; 
					[<a href="http://www.rockpapershotgun.com/2015/11/03/games-for-beginners/">visit site to read more</a>]</p>\n',
					feedlabel: 'Rock, Paper, Shotgun',
					date: 1446577256,
					feedname: 'rps' 
				},
			...
			]
		}
		</pre>
	</div>
	<h3>Example</h3>
	To see this in an example website form, click <a href="http://52.10.4.121:3000/getnewsforapp?valveAppID=8930&maxCount=4" target="_blank">here</a>.
</section>